(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{340:function(e,t,o){"use strict";o.r(t);var a=o(15),n=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"development-environment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#development-environment"}},[e._v("#")]),e._v(" Development Environment")]),e._v(" "),t("h2",{attrs:{id:"local-development"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#local-development"}},[e._v("#")]),e._v(" Local development")]),e._v(" "),t("h3",{attrs:{id:"install"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[e._v("#")]),e._v(" Install")]),e._v(" "),t("p",[e._v("To setup the latest snapshot version, checkout the develop branch of the "),t("a",{attrs:{href:"https://github.com/eclipse-slm/slm",target:"_blank",rel:"noopener noreferrer"}},[e._v("eclipse-slm/slm"),t("OutboundLink")],1),e._v(" GitHub repository and follow the "),t("RouterLink",{attrs:{to:"/docs/getting-started/installation/"}},[e._v("installation instructions")]),e._v(".")],1),e._v(" "),t("h3",{attrs:{id:"configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),t("p",[t("strong",[e._v("1) Edit compose file")])]),e._v(" "),t("p",[e._v("Edit in file "),t("code",[e._v("compose/config-exporter.yml")]),e._v(" the volume path and environment as described below.")]),e._v(" "),t("p",[t("strong",[e._v("1.1) Set volume path")])]),e._v(" "),t("p",[e._v("Edit the host path of this volume")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("- {{ /path/to/core/project/on/your/computer }}:/project\n")])])]),t("p",[e._v("to the path of core project on your local computer. If you are using Docker Desktop for Windows add the above path\nin "),t("code",[e._v("Settings -> Resources -> FILE SHARING")]),e._v(".")]),e._v(" "),t("p",[t("strong",[e._v("1.2) Environment")])]),e._v(" "),t("p",[e._v("Set the environment variable "),t("code",[e._v("CONFIGURE_CORE_PROJECT")]),e._v(" to "),t("code",[e._v("true")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("- CONFIGURE_CORE_PROJECT=true\n")])])]),t("p",[t("strong",[e._v("2) Run config exporter")])]),e._v(" "),t("p",[e._v("Wait until the stack is fully started and all init containers have stopped. Then run the config exporter container,\nwhich will override the configuration files in your core project (not yet public available):")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker-compose up --force-recreate config-exporter\n")])])]),t("p",[t("strong",[e._v("3) IDE")]),e._v("\nStop the containers relevant for your development and start the components in your IDE. Through the Config Exporter, the your local project has been configured to allow the components started via IDE to connect to the locally deployed stack.")]),e._v(" "),t("h2",{attrs:{id:"build"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[e._v("#")]),e._v(" Build")]),e._v(" "),t("p",[e._v("To build the Docker images of the Eclipse Service Lifecycle Management use the following commands inside the directory "),t("code",[e._v("stack/build")]),e._v(":")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker-compose -f build.yml -f {{ compose file containing the service to be built }}.yml build --no-cache awx-fixed-files\ndocker-compose -f build.yml -f {{ compose file containing the service to be built }}.yml build --no-cache\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);